{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/bundle.js","webpack:///webpack/bootstrap 6f9649f3bb357bfa6058","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","self","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","value","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","Module","_ref","element","settings","moduleClass","console","assert","init","Function","log","e","warn","destroy","moduleDispatcher","Library","window","findModules","document","initModules","elements","querySelectorAll","push","apply","extractModulesData","_this","modulesList","dataset","replace","split","forEach","index","getModuleSettings","settingsNodes","querySelector","settingsObject","textContent","trim","JSON","parse","groupCollapsed","groupEnd","default"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Module Dispatcher\n * Class for Modules initialization\n *\n * @copyright CodeX Team <team@ifmo.su>\n * @license MIT https://github.com/codex-team/dispatcher/LICENSE\n * @author @polinashneider https://github.com/polinashneider\n * @version 1.0.0\n *\n * @example\n * new moduleDispatcher({\n *   Library : codex\n * });\n */\n\n/**\n * Module object structure:\n *\n * @typedef {Module} Module\n * @property {String} name          - Module's name\n * @property {Element} element      - DOM Element with data-module\n * @property {Object|null} settings - Module settings got from <module-settings>\n * @property {Object} moduleClass   - JS class that handles the Module\n */\nvar Module = function () {\n  /**\n   * @constructor Dispatcher constructor\n   */\n  function Module(_ref) {\n    var name = _ref.name,\n        element = _ref.element,\n        settings = _ref.settings,\n        moduleClass = _ref.moduleClass;\n\n    _classCallCheck(this, Module);\n\n    this.name = name;\n    this.element = element;\n    this.settings = settings;\n    this.moduleClass = moduleClass;\n  }\n\n  /**\n    * Initialize each Module by calling its own «init» method\n    */\n\n\n  _createClass(Module, [{\n    key: 'init',\n    value: function init() {\n      try {\n        console.assert(this.moduleClass.init instanceof Function, 'Module «' + this.name + '» should implement init method');\n\n        if (this.moduleClass.init instanceof Function) {\n          this.moduleClass.init(this.settings, this.element);\n          console.log('Module \\xAB' + this.name + '\\xBB initialized');\n        }\n      } catch (e) {\n        console.warn('Module «' + this.name + '» was not initialized because of ', e);\n      }\n    }\n\n    /**\n      * Destroy each Module by calling its own «destroy» method, if it exists\n      * It is optional\n      */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.moduleClass.destroy instanceof Function) {\n        this.moduleClass.destroy();\n        console.log('Module \\xAB' + this.name + '\\xBB destroyed.');\n      }\n    }\n  }]);\n\n  return Module;\n}();\n\n/**\n * Class structure\n *\n * @typedef {moduleDispatcher} moduleDispatcher\n * @property {Object} Library    - global object, containing Modules to init\n * @property {Module[]} modules  - list of Modules\n */\n\n\nvar moduleDispatcher = function () {\n  /**\n   * @param {Object|null} settings — settings object, optional\n   * @param {Object} settings.Library — global object containing Modules\n   */\n  function moduleDispatcher(settings) {\n    _classCallCheck(this, moduleDispatcher);\n\n    this.Library = settings.Library || window;\n\n    /**\n     * Found modules list\n     * @type {Module[]}\n     */\n    this.modules = this.findModules(document);\n\n    /**\n     * Now we are ready to init Modules\n     */\n    this.initModules();\n  }\n\n  /**\n    * Return all modules inside the passed Element\n    *\n    * @param {Element} element — where to find modules\n    * @return {Module[]} found modules list\n    */\n\n\n  _createClass(moduleDispatcher, [{\n    key: 'findModules',\n    value: function findModules(element) {\n      /**\n       * Store found modules\n       * @type {Module[]}\n       */\n      var modules = [];\n\n      /**\n       * Elements with data-module\n       * @type {NodeList}\n       */\n      var elements = element.querySelectorAll('[data-module]');\n\n      /**\n       * Iterate found Elements and push them to the Modules list\n       */\n      for (var i = elements.length - 1; i >= 0; i--) {\n        /**\n         * One Element can contain several Modules\n         * @type {Array}\n         */\n        modules.push.apply(modules, _toConsumableArray(this.extractModulesData(elements[i])));\n      }\n\n      return modules;\n    }\n\n    /**\n      * Get all modules from an Element\n      *\n      * @example <div data-module=\"comments likes\">\n      * @return {Module[]} - Array of Module objects with settings\n      */\n\n  }, {\n    key: 'extractModulesData',\n    value: function extractModulesData(element) {\n      var _this = this;\n\n      var modules = [];\n      /**\n       * Get value of data-module attribute\n       */\n      var modulesList = element.dataset.module;\n      /**\n       * In case of multiple spaces in modulesList replace with single ones\n       */\n\n      modulesList = modulesList.replace(/\\s+/, ' ');\n\n      /**\n       * One Element can contain several modules\n       * @example <div data-module=\"comments likes\">\n       * @type {Array}\n       */\n      var moduleNames = modulesList.split(' ');\n\n      moduleNames.forEach(function (name, index) {\n        var module = new Module({\n          name: name,\n          element: element,\n          settings: _this.getModuleSettings(element, index, name),\n          moduleClass: _this.Library[name]\n        });\n\n        modules.push(module);\n      });\n\n      return modules;\n    }\n\n    /**\n      * Returns Settings for the Module\n      *\n      * @param {object} element — HTML element with data-module attribute\n      * @param {Number} index   - index of module (in case if an Element countains several modules)\n      * @param {String} name    - Module's name\n      *\n      * @example\n      *\n      * <module-settings hidden>\n      *     {\n      *         // your module's settings\n      *     }\n      * </module-settings>\n      *\n      */\n\n  }, {\n    key: 'getModuleSettings',\n    value: function getModuleSettings(element, index, name) {\n      var settingsNodes = element.querySelector('module-settings'),\n          settingsObject = void 0;\n\n      if (!settingsNodes) {\n        return null;\n      }\n\n      try {\n        settingsObject = settingsNodes.textContent.trim();\n        settingsObject = JSON.parse(settingsObject);\n      } catch (e) {\n        console.warn('Can not parse Module \\xAB' + name + '\\xBB settings bacause of: ' + e);\n        console.groupCollapsed(name + ' settings');\n        console.log(settingsObject);\n        console.groupEnd();\n\n        return null;\n      }\n\n      /**\n       * Case 1:\n       *\n       * Single module, settings via object\n       *\n       * <module-settings>\n       *     {\n       *         // Comments Module settings\n       *     }\n       * </module-settings>\n       */\n      if (!Array.isArray(settingsObject)) {\n        if (index === 0) {\n          return settingsObject;\n        } else {\n          console.warn('Wrong settings format. For several Modules use an array instead of object.');\n          return null;\n        }\n      }\n\n      /**\n       * Case 2:\n       *\n       * Several modules, settings via array\n       *\n       * <module-settings>\n       *   [\n       *     {\n       *         // Module 1 settings\n       *     },\n       *     {\n       *         // Module 2 settings\n       *     },\n       *     ...\n       *   ]\n       * </module-settings>\n       */\n      if (settingsObject[index]) {\n        return settingsObject[index];\n      } else {\n        return null;\n      }\n    }\n\n    /**\n    * Initializes a list of Modules via calling {@link Module#init} for each\n    */\n\n  }, {\n    key: 'initModules',\n    value: function initModules() {\n      console.groupCollapsed('ModuleDispatcher');\n\n      this.modules.forEach(function (module) {\n        module.init();\n      });\n\n      console.groupEnd();\n    }\n  }]);\n\n  return moduleDispatcher;\n}();\n\nexports.default = moduleDispatcher;\n;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6f9649f3bb357bfa6058","/**\n * Module Dispatcher\n * Class for Modules initialization\n *\n * @copyright CodeX Team <team@ifmo.su>\n * @license MIT https://github.com/codex-team/dispatcher/LICENSE\n * @author @polinashneider https://github.com/polinashneider\n * @version 1.0.0\n *\n * @example\n * new moduleDispatcher({\n *   Library : codex\n * });\n */\n\n/**\n * Module object structure:\n *\n * @typedef {Module} Module\n * @property {String} name          - Module's name\n * @property {Element} element      - DOM Element with data-module\n * @property {Object|null} settings - Module settings got from <module-settings>\n * @property {Object} moduleClass   - JS class that handles the Module\n */\nclass Module {\n/**\n * @constructor Dispatcher constructor\n */\n  constructor({name, element, settings, moduleClass}) {\n    this.name = name;\n    this.element = element;\n    this.settings = settings;\n    this.moduleClass = moduleClass;\n  }\n\n  /**\n    * Initialize each Module by calling its own «init» method\n    */\n  init() {\n    try {\n      console.assert(this.moduleClass.init instanceof Function, 'Module «' + this.name + '» should implement init method');\n\n      if (this.moduleClass.init instanceof Function) {\n        this.moduleClass.init(this.settings, this.element);\n        console.log(`Module «${this.name}» initialized`);\n      }\n    } catch(e) {\n      console.warn('Module «' + this.name + '» was not initialized because of ', e);\n    }\n  }\n\n  /**\n    * Destroy each Module by calling its own «destroy» method, if it exists\n    * It is optional\n    */\n  destroy() {\n    if (this.moduleClass.destroy instanceof Function) {\n      this.moduleClass.destroy();\n      console.log(`Module «${this.name}» destroyed.`);\n    }\n  }\n}\n\n/**\n * Class structure\n *\n * @typedef {moduleDispatcher} moduleDispatcher\n * @property {Object} Library    - global object, containing Modules to init\n * @property {Module[]} modules  - list of Modules\n */\nexport default class moduleDispatcher {\n/**\n * @param {Object|null} settings — settings object, optional\n * @param {Object} settings.Library — global object containing Modules\n */\n  constructor(settings) {\n    this.Library = settings.Library || window;\n\n    /**\n     * Found modules list\n     * @type {Module[]}\n     */\n    this.modules = this.findModules(document);\n\n    /**\n     * Now we are ready to init Modules\n     */\n    this.initModules();\n  }\n\n  /**\n    * Return all modules inside the passed Element\n    *\n    * @param {Element} element — where to find modules\n    * @return {Module[]} found modules list\n    */\n  findModules(element) {\n    /**\n     * Store found modules\n     * @type {Module[]}\n     */\n    let modules = [];\n\n    /**\n     * Elements with data-module\n     * @type {NodeList}\n     */\n    let elements = element.querySelectorAll('[data-module]');\n\n    /**\n     * Iterate found Elements and push them to the Modules list\n     */\n    for (let i = elements.length - 1; i >= 0; i--) {\n    /**\n     * One Element can contain several Modules\n     * @type {Array}\n     */\n      modules.push(...this.extractModulesData(elements[i]));\n    }\n\n    return modules;\n  }\n\n  /**\n    * Get all modules from an Element\n    *\n    * @example <div data-module=\"comments likes\">\n    * @return {Module[]} - Array of Module objects with settings\n    */\n  extractModulesData(element) {\n    let modules = [];\n    /**\n     * Get value of data-module attribute\n     */\n    let modulesList = element.dataset.module;\n    /**\n     * In case of multiple spaces in modulesList replace with single ones\n     */\n\n    modulesList = modulesList.replace(/\\s+/, ' ');\n\n    /**\n     * One Element can contain several modules\n     * @example <div data-module=\"comments likes\">\n     * @type {Array}\n     */\n    let moduleNames = modulesList.split(' ');\n\n    moduleNames.forEach( (name, index) => {\n      let module = new Module({\n        name: name,\n        element: element,\n        settings: this.getModuleSettings(element, index, name),\n        moduleClass: this.Library[name]\n      });\n\n      modules.push(module);\n    });\n\n    return modules;\n  }\n\n  /**\n    * Returns Settings for the Module\n    *\n    * @param {object} element — HTML element with data-module attribute\n    * @param {Number} index   - index of module (in case if an Element countains several modules)\n    * @param {String} name    - Module's name\n    *\n    * @example\n    *\n    * <module-settings hidden>\n    *     {\n    *         // your module's settings\n    *     }\n    * </module-settings>\n    *\n    */\n  getModuleSettings(element, index, name) {\n    let settingsNodes = element.querySelector('module-settings'),\n        settingsObject;\n\n    if (!settingsNodes) {\n      return null;\n    }\n\n    try {\n      settingsObject = settingsNodes.textContent.trim();\n      settingsObject = JSON.parse(settingsObject);\n    } catch(e) {\n      console.warn(`Can not parse Module «${name}» settings bacause of: ` + e);\n      console.groupCollapsed(name + ' settings');\n      console.log(settingsObject);\n      console.groupEnd();\n\n      return null;\n    }\n\n    /**\n     * Case 1:\n     *\n     * Single module, settings via object\n     *\n     * <module-settings>\n     *     {\n     *         // Comments Module settings\n     *     }\n     * </module-settings>\n     */\n    if (!Array.isArray(settingsObject)) {\n      if (index === 0) {\n        return settingsObject;\n      } else {\n        console.warn('Wrong settings format. For several Modules use an array instead of object.');\n        return null;\n      }\n    }\n\n    /**\n     * Case 2:\n     *\n     * Several modules, settings via array\n     *\n     * <module-settings>\n     *   [\n     *     {\n     *         // Module 1 settings\n     *     },\n     *     {\n     *         // Module 2 settings\n     *     },\n     *     ...\n     *   ]\n     * </module-settings>\n     */\n    if (settingsObject[index]) {\n      return settingsObject[index];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n * Initializes a list of Modules via calling {@link Module#init} for each\n */\n  initModules() {\n    console.groupCollapsed('ModuleDispatcher');\n\n    this.modules.forEach( module => {\n      module.init();\n    });\n\n    console.groupEnd();\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}